{"version":3,"sources":["webpack:///./index.js"],"names":["CountdownTimer","selector","targetDate","this","endTime","intervalId","timerRef","init","document","getElementById","classList","add","innerHTML","makeMarkup","getTime","start","startTime","Date","now","setInterval","lastDays","days","lastHours","hours","lastMins","mins","lastSecs","secs","nowTime","nowDays","nowHours","nowMins","nowSecs","updateTime","length","stop","clearInterval","time","_pad","Math","floor","value","String","padStart","timerOne","timerTwo","isDaysRankDown","lastView","code","intervalName","desc","hasOwnProperty","split","forEach","item","i","id","timeType","last","updateMarkup","querySelector","ref"],"mappings":"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","file":"main.581a46342880aa9dbbb4.js","sourcesContent":["import './styles.scss';\r\n\r\nclass CountdownTimer {\r\n  constructor({ selector, targetDate }) {\r\n    this.selector = selector;\r\n    this.endTime = targetDate;\r\n    this.intervalId = null;\r\n    this.timerRef = null;\r\n  }\r\n\r\n  init() {\r\n    this.timerRef = document.getElementById(this.selector);\r\n    this.timerRef.classList.add('timer');\r\n    this.timerRef.innerHTML = makeMarkup(this.getTime(0), false);\r\n  }\r\n\r\n  start() {\r\n    let startTime = this.endTime - Date.now() > 0 ? this.endTime - Date.now() : 0;\r\n    if (!startTime) {\r\n      this.stop();\r\n      return;\r\n    }\r\n    this.timerRef.innerHTML = makeMarkup(this.getTime(startTime), false);\r\n\r\n    this.intervalId = setInterval(() => {\r\n      const { days: lastDays, hours: lastHours, mins: lastMins, secs: lastSecs } = this.getTime(\r\n        startTime,\r\n      );\r\n\r\n      const nowTime = this.endTime - Date.now();\r\n      if (!nowTime) {\r\n        this.stop(); // Закончил считать!\r\n        return;\r\n      }\r\n\r\n      const { days: nowDays, hours: nowHours, mins: nowMins, secs: nowSecs } = this.getTime(\r\n        nowTime,\r\n      );\r\n\r\n      startTime = nowTime;\r\n\r\n      updateTime(this.selector, 'secs', lastSecs, nowSecs);\r\n      updateTime(this.selector, 'mins', lastMins, nowMins);\r\n      updateTime(this.selector, 'hours', lastHours, nowHours);\r\n      if (nowDays.length < lastDays.length) {\r\n        this.timerRef.innerHTML = makeMarkup(this.getTime(nowTime), true);\r\n      } else {\r\n        updateTime(this.selector, 'days', lastDays, nowDays);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  stop() {\r\n    if (this.intervalId !== null) clearInterval(this.intervalId);\r\n  }\r\n\r\n  getTime(time) {\r\n    const days = this._pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n    const hours = this._pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n    const mins = this._pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = this._pad(Math.floor((time % (1000 * 60)) / 1000));\r\n    return { days, hours, mins, secs };\r\n  }\r\n\r\n  _pad(value) {\r\n    return String(value).padStart(2, '0');\r\n  }\r\n}\r\n\r\nconst timerOne = new CountdownTimer({\r\n  selector: 'timer-1',\r\n  // targetDate: new Date('Nov 30, 2020'),\r\n  targetDate: Date.now() + 8.64e9 + 5000,\r\n  // targetDate: new Date('Nov 30, 2018'),\r\n});\r\n\r\ntimerOne.init();\r\ntimerOne.start();\r\n\r\nconst timerTwo = new CountdownTimer({\r\n  selector: 'timer-2',\r\n  targetDate: new Date('Jan 1, 2021'),\r\n  // targetDate: Date.now() + 8.64e9 + 10000,\r\n});\r\n\r\ntimerTwo.init();\r\ntimerTwo.start();\r\n\r\nfunction makeMarkup(time, isDaysRankDown) {\r\n  const lastView = isDaysRankDown ? '0' : '-';\r\n  let code = '';\r\n\r\n  for (const intervalName in time) {\r\n    let desc = '';\r\n    if (intervalName === 'days') desc = 'Дней';\r\n    else if (intervalName === 'hours') desc = 'Часов';\r\n    else if (intervalName === 'mins') desc = 'Минут';\r\n    else if (intervalName === 'secs') desc = 'Секунд';\r\n    else desc = 'Х..й знает чего';\r\n    if (time.hasOwnProperty(intervalName)) {\r\n      code += `<div class=\"field\">\r\n      <div class=\"field__second field__second__${intervalName}\">`;\r\n\r\n      time[intervalName].split('').forEach((item, i) => {\r\n        code += `<div class=\"field__digit field__digit_${i}\">\r\n        <div class=\"field__digit_last_placeholder\">\r\n          <div class=\"field__digit_last_placeholder_inner\">${lastView}</div>\r\n          </div>\r\n          <div class=\"field__digit_new_placeholder\">${item}</div>\r\n          <div class=\"field__digit_last_rotate\">${lastView}</div>\r\n          <div class=\"field__digit_new_rotate\">\r\n          <div class=\"field__digit_new_rotated\">\r\n        <div class=\"field__digit_new_rotated_inner\">${item}</div>\r\n        </div>\r\n        </div>\r\n        </div>`;\r\n      });\r\n      code += `</div><div class=\"field__description\">${desc}</div></div>`;\r\n    }\r\n  }\r\n  return code;\r\n}\r\n\r\nfunction updateTime(id, timeType, last, now) {\r\n  for (let i = 0; i < last.length; i += 1) {\r\n    const delta = now[i] - last[i];\r\n    if (delta) {\r\n      const digitRef = document.querySelector(\r\n        `#${id} > .field .field__second__${timeType} .field__digit_${i}`,\r\n      );\r\n      updateMarkup(digitRef, last[i], now[i]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateMarkup(ref, last, now) {\r\n  ref.innerHTML = `<div class=\"field__digit_last_placeholder\">\r\n          <div class=\"field__digit_last_placeholder_inner\">${last}</div>\r\n          </div>\r\n          <div class=\"field__digit_new_placeholder\">${now}</div>\r\n          <div class=\"field__digit_last_rotate\">${last}</div>\r\n          <div class=\"field__digit_new_rotate\">\r\n          <div class=\"field__digit_new_rotated\">\r\n        <div class=\"field__digit_new_rotated_inner\">${now}</div>\r\n        </div>\r\n        </div>`;\r\n}\r\n"],"sourceRoot":""}